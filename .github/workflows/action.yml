# This is a basic workflow to help you get started with Actions

name: Run Synopsys-Action

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted]

    env:
      MAC_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-bridge/0.1.225/synopsys-bridge-0.1.225-macosx.zip"
      LINUX_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-bridge/0.1.225/synopsys-bridge-0.1.225-linux64.zip"
      WINDOWS_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-bridge/0.1.225/synopsys-bridge-0.1.225-win64.zip"
      detect_project_name: "tb_gh_nodegoat_1"
      
    steps:
      - uses: actions/checkout@v2
      - name: Use synopsys-action
        uses: synopsys-sig/synopsys-action@main
        with:
          include_diagnostics: true
          #bridge_download_url: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-bridge/0.1.229/synopsys-bridge-0.1.229-win64.zip"
          # Polaris
          #polaris_serverUrl: ${{ secrets.POLARIS_SERVER_URL }}
          #polaris_accessToken: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          #polaris_application_name: "tb_app1"
          #polaris_project_name: "tb_proj"
          #polaris_assessment_types: "SAST"

          # Blackduck
          blackduck_url: ${{ secrets.blackduck_url}}
          blackduck_apiToken: ${{ secrets.blackduck_apiToken}}
          blackduck_scan_full: true
          #blackduck_install_directory: "/root"
          blackduck_scan_failure_severities: "ALL"
          github_token: ${{ secrets.GH_TOKEN}}
          blackduck_automation_fixpr: true
          blackduck_automation_prcomment: true
          #detect_project_name: "tb_gh_nodegoat"
          

          #Coverity
          #coverity_url: ${{ secrets.coverity_url}}
          ##coverity_user: ${{ secrets.coverity_user}}
          #coverity_passphrase: ${{ secrets.coverity_passphrase}}'
          #coverity_project_name: 'tb_test_action_nodegoat'
          #coverity_stream_name: 'tb_test_action_nodegoat'
          #coverity_policy_view: ${{ secrets.COVERITY_POLICY_VIEW }}
          #coverity_repository_name: ${{ secrets.COVERITY_REPOSITORY_NAME }}
          #coverity_branch_name: ${{ secrets.COVERITY_BRANCH_NAME }}
          # Mandatory for windows hosted environment
          #coverity_install_directory: "/root"
          #coverity_automation_prcomment: true
          

