name: Run Synopsys-Action
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: [ubuntu-latest]
    env:
      MAC_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-bridge/0.1.225/synopsys-bridge-0.1.225-macosx.zip"
      LINUX_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-bridge/0.1.225/synopsys-bridge-0.1.225-linux64.zip"
      WINDOWS_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-bridge/0.1.225/synopsys-bridge-0.1.225-win64.zip"
    
    steps:
      - uses: actions/checkout@v2
      - name: Use synopsys-action
        uses: synopsys-sig/synopsys-action@v1.2.0
        with:
          include_diagnostics: true
          #polaris_serverUrl: ${{ secrets.POLARIS_SERVER_URL }}
          #polaris_accessToken: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          #polaris_application_name: "tb_app1"
          #polaris_project_name: "tb_proj"
          #polaris_assessment_types: "SAST"

          # Blackduck test
          blackduck_url: ${{ secrets.blackduck_url}}
          blackduck_apiToken: ${{ secrets.blackduck_apiToken}}
          blackduck_scan_full: true
          blackduck_scan_failure_severities: "ALL"
          #github_token: ${{ secrets.GH_TOKEN}}
          #blackduck_automation_fixpr: true
          #blackduck_automation_prcomment: true
  
          
          #coverity_url: ${{ secrets.coverity_url}}
          ##coverity_user: ${{ secrets.coverity_user}}
          #coverity_passphrase: ${{ secrets.coverity_passphrase}}'
          #coverity_project_name: 'tb_test_action_nodegoat'
          #coverity_stream_name: 'tb_test_action_nodegoat'
          

